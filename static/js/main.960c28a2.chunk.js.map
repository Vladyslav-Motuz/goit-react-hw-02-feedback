{"version":3,"sources":["components/Notification/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Feedback/Feedback.js","components/App/App.js","index.js"],"names":["Notification","title","Section","children","Statistics","good","neutral","bad","total","positivePercentage","Feedback","state","hendleIncrement","event","nameBTN","currentTarget","innerText","toLowerCase","setState","preState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAOeA,EANM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OAAQ,4BAAIA,KCUDC,EAXC,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKF,IACJE,MCcEC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OAAQ,+BACJ,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCFFC,E,4MACFC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETK,gBAAkB,SAAAC,GACd,IAAMC,EAAUD,EAAME,cAAcC,UAAUC,cAC9C,EAAKC,UAAS,SAAAC,GACV,OAAO,eAAGL,EAAUK,EAASL,GAAW,O,EAGhDM,mBAAqB,WACjB,MAA+B,EAAKT,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAI3Bc,gCAAkC,WAC9B,MAA+B,EAAKV,MAA5BN,EAAR,EAAQA,KACFG,EAAQH,EADd,EAAcC,QAAd,EAAuBC,IAEvB,OAAQC,EAAQc,KAAKC,MAAOlB,EAAOG,EAAS,KAAO,G,4CAEvD,WACI,MAA+BgB,KAAKb,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACI,gCACI,cAAC,EAAD,CAASN,MAAM,wBAAf,SACI,gCACI,wBAAQwB,QAASD,KAAKZ,gBAAtB,kBACA,wBAAQa,QAASD,KAAKZ,gBAAtB,qBACA,wBAAQa,QAASD,KAAKZ,gBAAtB,sBAGR,cAAC,EAAD,CAASX,MAAM,aAAf,SACCuB,KAAKJ,qBACF,cAAC,EAAD,CACIf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKJ,qBACZX,mBAAoBe,KAAKH,oCAEzB,cAAC,EAAD,CAAcpB,MAAM,kC,GA1CrByB,IAAMC,WAkDdjB,I,MC5CAkB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.960c28a2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nconst Notification = ( {title} ) => {\r\n    return (<p>{title}</p>)\r\n}\r\nNotification.propTypes = {\r\n    title: PropTypes.string,    \r\n}\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nconst Section = ( {title, children} ) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>)\r\n}\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.any,\r\n}\r\nexport default Section","import PropTypes from 'prop-types';\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (<ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>)\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport Section from \"../Section/Section\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\n\r\nclass Feedback extends React.Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n    hendleIncrement = event => {\r\n        const nameBTN = event.currentTarget.innerText.toLowerCase();    \r\n        this.setState(preState => {\r\n            return { [nameBTN]: preState[nameBTN] + 1 }\r\n        })\r\n    };\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        return good + neutral + bad;\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        const total = good + neutral + bad;\r\n        return (total ? Math.round((good / total) * 100) : 0);\r\n    };    \r\n    render() {\r\n        const { good, neutral, bad } = this.state;    \r\n        return (            \r\n            <div>\r\n                <Section title=\"Please leave feedback\">\r\n                    <div>\r\n                        <button onClick={this.hendleIncrement}>Good</button>\r\n                        <button onClick={this.hendleIncrement}>Neutral</button>\r\n                        <button onClick={this.hendleIncrement}>Bad</button>\r\n                    </div>                \r\n                </Section>\r\n                <Section title=\"Statistics\">                \r\n                {this.countTotalFeedback() ?\r\n                    <Statistics\r\n                        good={good}\r\n                        neutral={neutral}\r\n                        bad={bad}\r\n                        total={this.countTotalFeedback()}\r\n                        positivePercentage={this.countPositiveFeedbackPercentage()} />\r\n                        :\r\n                        <Notification title='There is no feedback' />\r\n                }\r\n                </Section>\r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default Feedback;","import Feedback from \"../Feedback/Feedback\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Feedback/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}